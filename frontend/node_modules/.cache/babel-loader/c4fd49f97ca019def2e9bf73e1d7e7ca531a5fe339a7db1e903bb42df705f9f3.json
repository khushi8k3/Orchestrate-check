{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\login-feed\\\\Orchestrate\\\\frontend\\\\src\\\\components\\\\EventFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventFeed() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Get logged-in user from localStorage\n  const loggedInUser = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    fetch('http://localhost:5000/api/events').then(res => res.json()).then(data => {\n      setEvents(data);\n      setLoading(false);\n    }).catch(err => console.error('Error fetching events:', err));\n  }, []);\n  const handleRSVP = async eventId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/rsvp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          employeeName: loggedInUser.name\n        })\n      });\n      if (response.ok) {\n        alert('RSVP successful!');\n        setEvents(events.map(event => event._id === eventId ? {\n          ...event,\n          availableSpots: event.availableSpots - 1\n        } : event));\n      } else {\n        const result = await response.json();\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error('Failed to RSVP:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading events...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  const filteredEvents = events.filter(event => {\n    if (event.eventType === \"firm-wide\") return true;\n    if (event.eventType === \"limited-entry\") return true;\n    if (event.eventType === \"team-specific\" && event.team === loggedInUser.team) return true;\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No upcoming events.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", event.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), event.type === 'Limited-Entry' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Available Seats: \", event.availableSpots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this), event.type === 'Limited-Entry' && event.availableSpots > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvp-btn\",\n        onClick: () => handleRSVP(event._id),\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this), event.type === 'Limited-Entry' && event.availableSpots === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvp-btn\",\n        disabled: true,\n        children: \"Event Full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(EventFeed, \"+npp09ZlhZYCuFMbAhFP+QaH6MU=\");\n_c = EventFeed;\nexport default EventFeed;\nvar _c;\n$RefreshReg$(_c, \"EventFeed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventFeed","_s","events","setEvents","loading","setLoading","loggedInUser","JSON","parse","localStorage","getItem","fetch","then","res","json","data","catch","err","console","error","handleRSVP","eventId","response","method","headers","body","stringify","employeeName","name","ok","alert","map","event","_id","availableSpots","result","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredEvents","filter","eventType","team","length","className","title","description","Date","date","toLocaleDateString","type","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anush/login-feed/Orchestrate/frontend/src/components/EventFeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction EventFeed() {\n    const [events, setEvents] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Get logged-in user from localStorage\n    const loggedInUser = JSON.parse(localStorage.getItem(\"user\"));\n\n    useEffect(() => {\n        fetch('http://localhost:5000/api/events')\n            .then((res) => res.json())\n            .then((data) => {\n                setEvents(data);\n                setLoading(false);\n            })\n            .catch((err) => console.error('Error fetching events:', err));\n    }, []);\n\n    const handleRSVP = async (eventId) => {\n        try {\n            const response = await fetch(`http://localhost:5000/api/events/${eventId}/rsvp`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ employeeName: loggedInUser.name })\n            });\n            if (response.ok) {\n                alert('RSVP successful!');\n                setEvents(events.map(event =>\n                    event._id === eventId\n                        ? { ...event, availableSpots: event.availableSpots - 1 }\n                        : event\n                ));\n            } else {\n                const result = await response.json();\n                alert(result.message);\n            }\n        } catch (error) {\n            console.error('Failed to RSVP:', error);\n        }\n    };\n\n    if (loading) return <p>Loading events...</p>;\n\n    const filteredEvents = events.filter(event => {\n        if (event.eventType === \"firm-wide\") return true;\n        if (event.eventType === \"limited-entry\") return true;\n        if (event.eventType === \"team-specific\" && event.team === loggedInUser.team) return true;\n        return false;\n    });\n    \n\n    return (\n        <div>\n            {filteredEvents.length === 0 ? (\n                <p>No upcoming events.</p>\n            ) : (\n                filteredEvents.map((event) => (\n                    <div key={event._id} className=\"event-card\">\n                        <h3>{event.title}</h3>\n                        <p>{event.description}</p>\n                        <p>Date: {new Date(event.date).toLocaleDateString()}</p>\n                        <p>Type: {event.type}</p>\n                        {event.type === 'Limited-Entry' && (\n                            <p>Available Seats: {event.availableSpots}</p>\n                        )}\n                        {event.type === 'Limited-Entry' && event.availableSpots > 0 && (\n                            <button className=\"rsvp-btn\" onClick={() => handleRSVP(event._id)}>\n                                RSVP\n                            </button>\n                        )}\n                        {event.type === 'Limited-Entry' && event.availableSpots === 0 && (\n                            <button className=\"rsvp-btn\" disabled>\n                                Event Full\n                            </button>\n                        )}\n                    </div>\n                ))\n            )}\n        </div>\n    );\n}\n\nexport default EventFeed;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}