{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blueg\\\\OneDrive\\\\Desktop\\\\Feed-Orchestrate\\\\frontend\\\\src\\\\components\\\\EventFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventFeed = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const team = 'Marketing'; // Example: replace with dynamic value later\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/events?team=${team}`).then(response => response.json()).then(data => setEvents(data)).catch(error => console.error('Failed to fetch events:', error));\n  }, []);\n  const handleRSVP = async eventId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/rsvp/${eventId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          employeeId: '12345'\n        }) // Replace with real employee ID\n      });\n      const result = await response.json();\n      alert(result.message);\n    } catch (error) {\n      console.error('RSVP failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-feed\",\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"event-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-date\",\n        children: [\"\\uD83D\\uDCC5 \", new Date(event.date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", event.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), event.rsvpRequired && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvp-button\",\n        onClick: () => handleRSVP(event._id),\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(EventFeed, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventFeed;\nexport default EventFeed;\nvar _c;\n$RefreshReg$(_c, \"EventFeed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventFeed","_s","events","setEvents","team","fetch","then","response","json","data","catch","error","console","handleRSVP","eventId","method","headers","body","JSON","stringify","employeeId","result","alert","message","className","children","map","event","title","fileName","_jsxFileName","lineNumber","columnNumber","Date","date","toLocaleDateString","type","rsvpRequired","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/blueg/OneDrive/Desktop/Feed-Orchestrate/frontend/src/components/EventFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EventFeed = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const team = 'Marketing'; // Example: replace with dynamic value later\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/api/events?team=${team}`)\r\n            .then(response => response.json())\r\n            .then(data => setEvents(data))\r\n            .catch(error => console.error('Failed to fetch events:', error));\r\n    }, []);\r\n\r\n    const handleRSVP = async (eventId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/events/rsvp/${eventId}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ employeeId: '12345' }) // Replace with real employee ID\r\n            });\r\n            const result = await response.json();\r\n            alert(result.message);\r\n        } catch (error) {\r\n            console.error('RSVP failed:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"event-feed\">\r\n            {events.map(event => (\r\n                <div key={event._id} className=\"event-card\">\r\n                    <h3 className=\"event-title\">{event.title}</h3>\r\n                    <p className=\"event-date\">ðŸ“… {new Date(event.date).toLocaleDateString()}</p>\r\n                    <p>Type: {event.type}</p>\r\n                    {event.rsvpRequired && (\r\n                        <button className=\"rsvp-button\" onClick={() => handleRSVP(event._id)}>\r\n                            RSVP\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMQ,IAAI,GAAG,WAAW,CAAC,CAAC;;EAE1BP,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,yCAAyCD,IAAI,EAAE,CAAC,CACjDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,SAAS,CAACM,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;IAClC,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAAC,yCAAyCS,OAAO,EAAE,EAAE;QAC7EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,UAAU,EAAE;QAAQ,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,MAAMd,QAAQ,CAACC,IAAI,CAAC,CAAC;MACpCc,KAAK,CAACD,MAAM,CAACE,OAAO,CAAC;IACzB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBvB,MAAM,CAACwB,GAAG,CAACC,KAAK,iBACb5B,OAAA;MAAqByB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvC1B,OAAA;QAAIyB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE,KAAK,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CjC,OAAA;QAAGyB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,eAAG,EAAC,IAAIQ,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5EjC,OAAA;QAAA0B,QAAA,GAAG,QAAM,EAACE,KAAK,CAACS,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBL,KAAK,CAACU,YAAY,iBACftC,OAAA;QAAQyB,SAAS,EAAC,aAAa;QAACc,OAAO,EAAEA,CAAA,KAAMzB,UAAU,CAACc,KAAK,CAACY,GAAG,CAAE;QAAAd,QAAA,EAAC;MAEtE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX;IAAA,GARKL,KAAK,CAACY,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASd,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAzCID,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}