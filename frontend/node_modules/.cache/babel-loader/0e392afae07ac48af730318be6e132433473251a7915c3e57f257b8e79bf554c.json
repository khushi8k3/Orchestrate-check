{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\login-feed\\\\Orchestrate\\\\frontend\\\\src\\\\components\\\\EventFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventFeed() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  useEffect(() => {\n    // Get the logged-in user from localStorage\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    if (user) {\n      setLoggedInUser(user);\n    } else {\n      alert(\"User not logged in!\");\n      return;\n    }\n\n    // Fetch events from the server\n    fetch('http://localhost:5000/api/events').then(res => res.json()).then(data => {\n      setEvents(data);\n      setLoading(false);\n    }).catch(err => console.error('Error fetching events:', err));\n  }, []);\n  const handleRSVP = async eventId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/rsvp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          employeeName: loggedInUser.name\n        })\n      });\n      if (response.ok) {\n        alert('RSVP successful!');\n        setEvents(events.map(event => event._id === eventId ? {\n          ...event,\n          availableSpots: event.availableSpots - 1\n        } : event));\n      } else {\n        const result = await response.json();\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error('Failed to RSVP:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading events...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  const filteredEvents = events.filter(event => {\n    if (event.type === 'Firm-Wide') return true;\n    if (event.type === 'Limited-Entry') return true;\n    if (event.type === 'Team-Specific' && event.team === loggedInUser.team) return true;\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No upcoming events.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", event.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), event.type === 'Limited-Entry' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF9F\\uFE0F Available Seats: \", event.availableSpots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), event.type === 'Limited-Entry' && event.availableSpots > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvp-btn\",\n        onClick: () => handleRSVP(event._id),\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), event.type === 'Limited-Entry' && event.availableSpots === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvp-btn\",\n        disabled: true,\n        children: \"Event Full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(EventFeed, \"7jv9+4rhCKWCQwjbB4Yup5ZuiUI=\");\n_c = EventFeed;\nexport default EventFeed;\nvar _c;\n$RefreshReg$(_c, \"EventFeed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventFeed","_s","events","setEvents","loading","setLoading","loggedInUser","setLoggedInUser","user","JSON","parse","localStorage","getItem","alert","fetch","then","res","json","data","catch","err","console","error","handleRSVP","eventId","response","method","headers","body","stringify","employeeName","name","ok","map","event","_id","availableSpots","result","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredEvents","filter","type","team","length","className","title","description","Date","date","toLocaleDateString","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anush/login-feed/Orchestrate/frontend/src/components/EventFeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction EventFeed() {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n\n  useEffect(() => {\n    // Get the logged-in user from localStorage\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    if (user) {\n      setLoggedInUser(user);\n    } else {\n      alert(\"User not logged in!\");\n      return;\n    }\n\n    // Fetch events from the server\n    fetch('http://localhost:5000/api/events')\n      .then((res) => res.json())\n      .then((data) => {\n        setEvents(data);\n        setLoading(false);\n      })\n      .catch((err) => console.error('Error fetching events:', err));\n  }, []);\n\n  const handleRSVP = async (eventId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/rsvp`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ employeeName: loggedInUser.name })\n      });\n      if (response.ok) {\n        alert('RSVP successful!');\n        setEvents(events.map(event =>\n          event._id === eventId\n            ? { ...event, availableSpots: event.availableSpots - 1 }\n            : event\n        ));\n      } else {\n        const result = await response.json();\n        alert(result.message);\n      }\n    } catch (error) {\n      console.error('Failed to RSVP:', error);\n    }\n  };\n\n  if (loading) return <p>Loading events...</p>;\n\n  const filteredEvents = events.filter(event => {\n    if (event.type === 'Firm-Wide') return true;\n    if (event.type === 'Limited-Entry') return true;\n    if (event.type === 'Team-Specific' && event.team === loggedInUser.team) return true;\n    return false;\n  });\n\n  return (\n    <div>\n      {filteredEvents.length === 0 ? (\n        <p>No upcoming events.</p>\n      ) : (\n        filteredEvents.map((event) => (\n          <div key={event._id} className=\"event-card\">\n            <h3>{event.title}</h3>\n            <p>{event.description}</p>\n            <p>Date: {new Date(event.date).toLocaleDateString()}</p>\n            <p>Type: {event.type}</p>\n\n            {event.type === 'Limited-Entry' && (\n              <p>üéüÔ∏è Available Seats: {event.availableSpots}</p>\n            )}\n\n            {event.type === 'Limited-Entry' && event.availableSpots > 0 && (\n              <button className=\"rsvp-btn\" onClick={() => handleRSVP(event._id)}>\n                RSVP\n              </button>\n            )}\n            {event.type === 'Limited-Entry' && event.availableSpots === 0 && (\n              <button className=\"rsvp-btn\" disabled>\n                Event Full\n              </button>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default EventFeed;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}